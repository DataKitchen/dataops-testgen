---
strTemplate01_sampling:  "SELECT TOP {SAMPLE_SIZE} "
strTemplate01_else:  "SELECT "
strTemplate02_all: |
  {CONNECTION_ID} as connection_id,
  '{PROJECT_CODE}' as project_code,
  '{TABLE_GROUPS_ID}' as table_groups_id,
  '{DATA_SCHEMA}' AS schema_name,
  '{RUN_DATE}' AS run_date,
  '{DATA_TABLE}' AS table_name,
  {COL_POS} AS position,
  '{COL_NAME_SANITIZED}' AS column_name,
  '{COL_TYPE}' AS column_type,
  '{COL_GEN_TYPE}' AS general_type,
  COUNT(*) AS record_ct,
  COUNT("{COL_NAME}") AS value_ct,
  COUNT(DISTINCT "{COL_NAME}") AS distinct_value_ct,
  SUM(CASE WHEN "{COL_NAME}" IS NULL THEN 1 ELSE 0 END) AS null_value_ct,
strTemplate03_ADN: MIN(LEN("{COL_NAME}"))  AS min_length,
  MAX(LEN("{COL_NAME}"))  AS max_length,
  AVG(CAST(NULLIF(LEN("{COL_NAME}"), 0) AS FLOAT)) AS avg_length,
strTemplate03_else:  NULL as min_length,
  NULL as max_length,
  NULL as avg_length,
strTemplate04_A:  SUM(CASE
        WHEN LTRIM(RTRIM("{COL_NAME}")) LIKE '0([.]0*)' THEN 1 ELSE 0
      END)  AS zero_value_ct,
strTemplate04_N:   CAST(SUM( 1 - ABS(SIGN("{COL_NAME}")))AS BIGINT ) AS zero_value_ct,
strTemplate04_else: NULL as zero_value_ct,
strTemplate05_A: COUNT(DISTINCT UPPER(REPLACE(TRANSLATE("{COL_NAME}",' '''',.-',REPLICATE(' ', LEN(' '''',.-'))),' ',''))) as distinct_std_value_ct,
  SUM(CASE
        WHEN "{COL_NAME}" = '' THEN 1
                             ELSE 0
      END)  AS zero_length_ct,
  SUM( CASE
         WHEN "{COL_NAME}" BETWEEN ' !' AND '!' THEN 1
                                              ELSE 0
       END )  AS lead_space_ct,
  SUM( CASE WHEN "{COL_NAME}" LIKE '"%"' OR "{COL_NAME}" LIKE '''%''' THEN 1 ELSE 0 END ) as quoted_value_ct,
  SUM( CASE WHEN "{COL_NAME}" LIKE '%[0-9]%' THEN 1 ELSE 0 END ) as includes_digit_ct,
  SUM( CASE
         WHEN "{COL_NAME}" IN ('.', '?') OR "{COL_NAME}" LIKE ' ' THEN 1
         WHEN LEN("{COL_NAME}") > 1
          AND ( LOWER("{COL_NAME}") LIKE '%..%' OR  LOWER("{COL_NAME}") LIKE '%--%'
                 OR (LEN(REPLACE("{COL_NAME}", '0', ''))= 0 )
                 OR (LEN(REPLACE("{COL_NAME}", '9', ''))= 0 )
                 OR (LEN(REPLACE(LOWER("{COL_NAME}"), 'x', ''))= 0 )
                 OR (LEN(REPLACE(LOWER("{COL_NAME}"), 'z', ''))= 0 )
             )  THEN 1
         WHEN LOWER("{COL_NAME}") IN ('blank','error','missing','tbd',
                                    'n/a','#na','none','null','unknown')           THEN 1
         WHEN LOWER("{COL_NAME}") IN ('(blank)','(error)','(missing)','(tbd)',
                                    '(n/a)','(#na)','(none)','(null)','(unknown)') THEN 1
         WHEN LOWER("{COL_NAME}") IN ('[blank]','[error]','[missing]','[tbd]',
                                    '[n/a]','[#na]','[none]','[null]','[unknown]') THEN 1
                                                                                   ELSE 0
       END )   AS filled_value_ct,
  LEFT(MIN(NULLIF("{COL_NAME}", '') COLLATE Latin1_General_BIN ), 100)  AS min_text,
  LEFT(MAX(NULLIF("{COL_NAME}", '') COLLATE Latin1_General_BIN ), 100)  AS max_text,
  SUM({DATA_QC_SCHEMA}.fndk_isnum(LEFT("{COL_NAME}", 31)))  AS numeric_ct,
  SUM({DATA_QC_SCHEMA}.fndk_isdate(LEFT("{COL_NAME}", 26)))  AS date_ct,
  CASE
    WHEN CAST(SUM( CASE WHEN UPPER("{COL_NAME}") LIKE '[1-9]% [A-Z]% %'
                           AND CHARINDEX(' ', "{COL_NAME}") BETWEEN 2 and 6  THEN 1
                     END ) as FLOAT) /CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.8  THEN 'STREET_ADDR'
    WHEN CAST(SUM(CASE WHEN "{COL_NAME}" IN ('AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA','GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT','VT','VI','VA','WA','WV','WI','WY','AE','AP','AA')
         THEN 1 END) AS FLOAT)/CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'STATE_USA'
    WHEN CAST(SUM( CASE WHEN ("{COL_NAME}" LIKE '[+]1%[0-9][0-9][0-9]%[-. ][0-9][0-9][0-9]%[0-9][0-9][0-9][0-9,0-9,0-9,0-9,0-9,0-9]' AND "{COL_NAME}" NOT LIKE '%[^0-9+()-]%')
                     OR ("{COL_NAME}" LIKE '[+]1%[0-9][0-9][0-9][- ][0-9][0-9][0-9][- ][0-9][0-9][0-9][0-9]' AND "{COL_NAME}" NOT LIKE '%[^0-9+-]%')
         THEN 1 END) AS FLOAT)/CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'PHONE_USA'
    WHEN CAST(SUM( CASE WHEN "{COL_NAME}" LIKE '%[_a-zA-Z0-9.-]%@%[a-zA-Z0-9.-]%.[a-zA-Z][a-zA-Z]%'
         THEN 1 END) AS FLOAT)/CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'EMAIL'
    WHEN CAST(SUM( CASE WHEN TRANSLATE("{COL_NAME}",'012345678','999999999') IN ('99999', '999999999', '99999-9999')
         THEN 1 END) AS FLOAT)/CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'ZIP_USA'
    WHEN CAST(SUM( CASE WHEN "{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS NOT LIKE ' %'
                          AND "{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '[a-z0-9 _-]%'
                          AND ("{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%.txt'
                          OR "{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%.csv'
                          OR "{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%.tsv'
                          OR "{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%.dat'
                          OR "{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%.doc'
                          OR "{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%.pdf'
                          OR "{COL_NAME}" COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%.xlsx')
         THEN 1 END) AS FLOAT)/CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'FILE_NAME'
    WHEN CAST(SUM( CASE WHEN "{COL_NAME}" LIKE '[0-9][0-9][0-9][0-9][- ][0-9][0-9][0-9][0-9][- ][0-9][0-9][0-9][0-9][- ][0-9][0-9][0-9][0-9]'
         THEN 1 END) AS FLOAT)/CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.8 THEN 'CREDIT_CARD'
    WHEN CAST(SUM( CASE WHEN ( "{COL_NAME}" LIKE '%,%,%,%'
                            OR "{COL_NAME}" LIKE '%|%|%|%'
                            OR "{COL_NAME}" LIKE '%^%^%^%'
                            OR "{COL_NAME}" LIKE '%' + CHAR(9) + '%' + CHAR(9) + '%' + CHAR(9) + '%' )
                         AND NOT ( "{COL_NAME}" LIKE '% and %'
                                OR "{COL_NAME}" LIKE '% but %'
                                OR "{COL_NAME}" LIKE '% or %'
                                OR "{COL_NAME}" LIKE '% yet %' )
                         AND ISNULL(CAST(LEN("{COL_NAME}") - LEN(REPLACE("{COL_NAME}", ',', '')) as FLOAT)
                              / CAST(NULLIF(LEN("{COL_NAME}") - LEN(REPLACE("{COL_NAME}", ' ', '')), 0) as FLOAT), 1) > 0.6
         THEN 1 END) AS FLOAT)/CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.8 THEN 'DELIMITED_DATA'
    WHEN CAST(SUM ( CASE WHEN "{COL_NAME}" LIKE '[0-8][0-9][0-9][- ][0-9][0-9][- ][0-9][0-9][0-9][0-9]'
                     AND LEFT("{COL_NAME}", 3) NOT BETWEEN '734' AND '749'
                     AND LEFT("{COL_NAME}", 3) <> '666' THEN 1 END) AS FLOAT)/CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'SSN'
  END as std_pattern_match,
strTemplate05_else: NULL as distinct_std_value_ct,
  NULL as zero_length_ct,
  NULL as lead_space_ct,
  NULL as quoted_value_ct,
  NULL as includes_digit_ct,
  NULL as filled_value_ct,
  NULL as min_text,
  NULL as max_text,
  NULL as numeric_ct,
  NULL as date_ct,
  NULL as std_pattern_match,
strTemplate06_A_patterns:  ( SELECT LEFT(STRING_AGG(pattern, ' | ') WITHIN GROUP (ORDER BY ct DESC), 1000) AS concat_pats
     FROM (
           SELECT TOP 5 CAST(COUNT(*) AS VARCHAR(10)) + ' | ' + pattern AS pattern,
                  COUNT(*) AS ct
             FROM (  SELECT TRANSLATE("{COL_NAME}"  COLLATE Latin1_General_BIN,
                            'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',
                            'aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAANNNNNNNNNN' )
                     AS pattern
                      FROM {DATA_SCHEMA}.{DATA_TABLE} WITH (NOLOCK)
                     WHERE "{COL_NAME}" > ' ' AND ((SELECT MAX(LEN("{COL_NAME}"))
                                                    FROM {DATA_SCHEMA}.{DATA_TABLE} WITH (NOLOCK)) BETWEEN 3 and {PARM_MAX_PATTERN_LENGTH})) p
           GROUP BY pattern
           HAVING pattern > ' '
           ORDER BY COUNT(*) DESC
          ) ps) AS top_patterns,
strTemplate06_else: NULL as top_patterns,
strTemplate07_A_freq:  (  SELECT LEFT(STRING_AGG(val, ' | ') WITHIN GROUP (ORDER BY ct DESC, val ASC), 1000) as concat_vals
  FROM (
          SELECT TOP 10 CAST(COUNT(*) as VARCHAR(10)) + ' | ' + "{COL_NAME}" as val,
          COUNT(*) as ct
          FROM {DATA_SCHEMA}.{DATA_TABLE} WITH (NOLOCK)
          WHERE "{COL_NAME}" > ' '
          GROUP BY "{COL_NAME}"
          HAVING "{COL_NAME}" > ' '
          ORDER BY COUNT(*) DESC
        ) ps
  )  AS top_freq_values,
strTemplate07_else: NULL as top_freq_values,
strTemplate08_N: MIN("{COL_NAME}")  AS min_value,
  MIN(CASE WHEN "{COL_NAME}" > 0 THEN "{COL_NAME}" ELSE NULL END)  AS min_value_over_0,
  MAX("{COL_NAME}")  AS max_value,
  AVG(CAST("{COL_NAME}" AS FLOAT))  AS avg_value,
  STDEV(CAST("{COL_NAME}" AS FLOAT))  AS stdev_value,
  MIN(pct_25) as percentile_25,
  MIN(pct_50) as percentile_50,
  MIN(pct_75) as percentile_75,
strTemplate08_else: NULL as min_value,
  NULL as min_value_over_0,
  NULL as max_value,
  NULL as avg_value,
  NULL as stdev_value,
  NULL as percentile_25,
  NULL as percentile_50,
  NULL as percentile_75,
strTemplate10_N_dec: SUM(ROUND(("{COL_NAME}" % 1), 5)) as fractional_sum,

strTemplate10_else: NULL as fractional_sum,

strTemplate11_D:  CASE
         WHEN MIN("{COL_NAME}") IS NULL THEN NULL
         ELSE CASE WHEN MIN("{COL_NAME}") >= CAST('0001-01-01' as date) THEN MIN("{COL_NAME}") ELSE CAST('0001-01-01' as date) END
       END as min_date,
  MAX("{COL_NAME}") as max_date,
  SUM(CASE
        WHEN DATEDIFF(month, "{COL_NAME}", '{RUN_DATE}') > 12 THEN 1
                                                            ELSE 0
      END) AS before_1yr_date_ct,
  SUM(CASE
        WHEN DATEDIFF(month, "{COL_NAME}", '{RUN_DATE}') > 60 THEN 1
                                                            ELSE 0
      END) AS before_5yr_date_ct,
  SUM(CASE
        WHEN DATEDIFF(month, "{COL_NAME}", '{RUN_DATE}') > 240 THEN 1
                                                              ELSE 0
      END) AS before_20yr_date_ct,
  SUM(CASE
        WHEN DATEDIFF(day, "{COL_NAME}", '{RUN_DATE}') BETWEEN 0 AND 365 THEN 1
                                                                         ELSE 0
      END) AS within_1yr_date_ct,
  SUM(CASE
        WHEN DATEDIFF(day, "{COL_NAME}", '{RUN_DATE}') BETWEEN 0 AND 30 THEN 1
                                                                        ELSE 0
      END) AS within_1mo_date_ct,
  SUM(CASE
        WHEN "{COL_NAME}" > '{RUN_DATE}' THEN 1 ELSE 0
      END) AS future_date_ct,
  COUNT(DISTINCT DATEDIFF(day, "{COL_NAME}", '{RUN_DATE}' ) ) as date_days_present,
  COUNT(DISTINCT DATEDIFF(week, "{COL_NAME}", '{RUN_DATE}' ) ) as date_weeks_present,
  COUNT(DISTINCT DATEDIFF(month, "{COL_NAME}", '{RUN_DATE}' ) ) as date_months_present,

strTemplate11_else:  NULL as min_date,
  NULL as max_date,
  NULL as before_1yr_date_ct,
  NULL as before_5yr_date_ct,
  NULL as before_20yr_date_ct,
  NULL as within_1yr_date_ct,
  NULL as within_1mo_date_ct,
  NULL as future_date_ct,
  NULL as date_days_present,
  NULL as date_weeks_present,
  NULL as date_months_present,

strTemplate12_B: SUM(CAST("{COL_NAME}" AS INTEGER)) AS boolean_true_ct,

strTemplate12_else: NULL as boolean_true_ct,

strTemplate13_ALL: NULL AS datatype_suggestion,
strTemplate14_A_do_patterns:  ( SELECT COUNT(DISTINCT TRANSLATE("{COL_NAME}"  COLLATE Latin1_General_BIN,
                                'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',
                                'aaaaaaaaaaaaaaaaaaaaaaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAANNNNNNNNNN'
                              )
             ) AS pattern_ct
  FROM {DATA_SCHEMA}.{DATA_TABLE} WITH (NOLOCK)
 WHERE "{COL_NAME}" > ' ' )  AS distinct_pattern_ct,
  SUM(CAST(SIGN(LEN(RTRIM(LTRIM("{COL_NAME}"))) - LEN(REPLACE(RTRIM(LTRIM("{COL_NAME}")),' ',''))) AS BIGINT)) AS embedded_space_ct,
  AVG(CAST(LEN(RTRIM(LTRIM("{COL_NAME}"))) - LEN(REPLACE(RTRIM(LTRIM("{COL_NAME}")),' ','')) AS FLOAT))  AS avg_embedded_spaces,

strTemplate14_A_no_patterns:  NULL as distinct_pattern_ct,
  SUM(CAST(SIGN(LEN(RTRIM(LTRIM("{COL_NAME}"))) - LEN(REPLACE(RTRIM(LTRIM("{COL_NAME}")),' ',''))) AS BIGINT)) AS embedded_space_ct,
  AVG(CAST(LEN(RTRIM(LTRIM("{COL_NAME}"))) - LEN(REPLACE(RTRIM(LTRIM("{COL_NAME}")),' ','')) AS FLOAT)) AS avg_embedded_spaces,

strTemplate14_else:  NULL as distinct_pattern_ct,
  NULL as embedded_space_ct,
  NULL as avg_embedded_spaces,

strTemplate15_ALL:  NULL as functional_data_type,
  NULL as functional_table_type,

strTemplate16_ALL: " '{PROFILE_RUN_ID}' as profile_run_id"

strTemplate98_sampling: ' FROM {DATA_SCHEMA}.{DATA_TABLE} WITH (NOLOCK)'

strTemplate98_else: ' FROM {DATA_SCHEMA}.{DATA_TABLE} WITH (NOLOCK)'

strTemplate99_N: |
     , (SELECT TOP 1
             PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY "{COL_NAME}") OVER () AS pct_25,
             PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY "{COL_NAME}") OVER () AS pct_50,
             PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY "{COL_NAME}") OVER () AS pct_75
        FROM {DATA_SCHEMA}.{DATA_TABLE} WITH (NOLOCK)) pctile

strTemplate99_else: ' '

strTemplate100_sampling: ' ORDER BY RAND()'
