---
strTemplate01_sampling: "SELECT "
strTemplate01_else: "SELECT "
strTemplate02_all: |
  {CONNECTION_ID} as connection_id,
  '{PROJECT_CODE}' as project_code,
  '{TABLE_GROUPS_ID}' as table_groups_id,
  '{DATA_SCHEMA}' AS schema_name,
  '{RUN_DATE}' AS run_date,
  '{DATA_TABLE}' AS table_name,
  {COL_POS} AS position,
  '{COL_NAME_SANITIZED}' AS column_name,
  '{COL_TYPE}' AS column_type,
  '{COL_GEN_TYPE}' AS general_type,
  COUNT(*) AS record_ct,
  COUNT("{COL_NAME}") AS value_ct,
  COUNT(DISTINCT "{COL_NAME}") AS distinct_value_ct,
  SUM(NVL2("{COL_NAME}", 0, 1)) AS null_value_ct,
strTemplate03_ADN: MIN(LEN("{COL_NAME}"))  AS min_length,
  MAX(LEN("{COL_NAME}"))  AS max_length,
  AVG(NULLIF(LEN("{COL_NAME}"), 0)::FLOAT) AS avg_length,
strTemplate03_else:  NULL as min_length,
  NULL as max_length,
  NULL as avg_length,
strTemplate04_A:  SUM(CASE
        WHEN REGEXP_LIKE(TRIM("{COL_NAME}"::VARCHAR), '^0(\.0*)?$') THEN 1 ELSE 0
      END)  AS zero_value_ct,
strTemplate04_N:  SUM( 1 - ABS(SIGN("{COL_NAME}")) )::BIGINT AS zero_value_ct,
strTemplate04_else: NULL as zero_value_ct,
strTemplate05_A:  COUNT(DISTINCT UPPER(TRANSLATE("{COL_NAME}", ' '',.-', ''))) as distinct_std_value_ct,
  SUM(CASE
        WHEN "{COL_NAME}" = '' THEN 1
                             ELSE 0
      END)  AS zero_length_ct,
  SUM( CASE
         WHEN "{COL_NAME}" BETWEEN ' !' AND '!' THEN 1
                                              ELSE 0
       END )  AS lead_space_ct,
  SUM( CASE WHEN "{COL_NAME}"::VARCHAR ILIKE '"%"' OR "{COL_NAME}"::VARCHAR ILIKE '''%''' THEN 1 ELSE 0 END ) as quoted_value_ct,
  SUM( CASE WHEN REGEXP_LIKE("{COL_NAME}"::VARCHAR, '.*[0-9].*') THEN 1 ELSE 0 END ) as includes_digit_ct,
  SUM( CASE
         WHEN "{COL_NAME}" IN ('.', '?', ' ') THEN 1
         WHEN LOWER("{COL_NAME}"::VARCHAR) REGEXP '-{2,}' OR LOWER("{COL_NAME}"::VARCHAR) REGEXP '0{2,}' OR LOWER("{COL_NAME}"::VARCHAR) REGEXP '9{2,}'
              OR LOWER("{COL_NAME}"::VARCHAR) REGEXP 'x{2,}' OR LOWER("{COL_NAME}"::VARCHAR) REGEXP 'z{2,}' THEN 1
         WHEN LOWER("{COL_NAME}") IN ('blank','error','missing','tbd',
                                    'n/a','#na','none','null','unknown')           THEN 1
         WHEN LOWER("{COL_NAME}") IN ('(blank)','(error)','(missing)','(tbd)',
                                    '(n/a)','(#na)','(none)','(null)','(unknown)') THEN 1
         WHEN LOWER("{COL_NAME}") IN ('[blank]','[error]','[missing]','[tbd]',
                                    '[n/a]','[#na]','[none]','[null]','[unknown]') THEN 1
                                                                                   ELSE 0
       END )   AS filled_value_ct,
  LEFT(MIN(NULLIF("{COL_NAME}", '')), 100)  AS min_text,
  LEFT(MAX(NULLIF("{COL_NAME}", '')), 100)  AS max_text,
  SUM({DATA_QC_SCHEMA}.fndk_isnum(LEFT("{COL_NAME}", 31)))  AS numeric_ct,
  SUM({DATA_QC_SCHEMA}.fndk_isdate(LEFT("{COL_NAME}", 26)))  AS date_ct,
  CASE
    WHEN CAST(SUM( CASE WHEN REGEXP_LIKE("{COL_NAME}"::VARCHAR, '^[0-9]{1,5}[a-zA-Z]?\\s\\w{1,5}\\.?\\s?\\w*\\s?\\w*\\s[a-zA-Z]{1,6}\\.?\\s?[0-9]{0,5}[A-Z]{0,1}$')
                        THEN 1 END) AS FLOAT) / CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.8 THEN 'STREET_ADDR'
    WHEN CAST(SUM(CASE WHEN "{COL_NAME}" IN ('AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA','GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT','VT','VI','VA','WA','WV','WI','WY','AE','AP','AA')
                        THEN 1 END) AS FLOAT) / CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'STATE_USA'
    WHEN CAST(SUM( CASE WHEN REGEXP_LIKE("{COL_NAME}"::VARCHAR, '^([\\+]1 |1-|)[\\+]?[(]?[0-9]{3}[)][ ]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')
      OR REGEXP_LIKE("{COL_NAME}"::VARCHAR, '^([\+]1 |1-|)[2-9][01][0-9][-| ]?[0-9]{3}[-| ]?[0-9]{4}$')
                        THEN 1 END) AS FLOAT) / CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'PHONE_USA'
    WHEN CAST(SUM( CASE WHEN REGEXP_LIKE("{COL_NAME}"::VARCHAR, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$')
                        THEN 1 END) AS FLOAT) / CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'EMAIL'
    WHEN CAST(SUM( CASE WHEN TRANSLATE("{COL_NAME}",'012345678','999999999') IN ('99999', '999999999', '99999-9999')
                        THEN 1 END) AS FLOAT) / CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'ZIP_USA'
    WHEN CAST(SUM( CASE WHEN REGEXP_LIKE("{COL_NAME}"::VARCHAR, '^[\\w\\s\-]+\\.(txt|csv|tsv|dat|doc|pdf|xlsx)$')
                        THEN 1 END) AS FLOAT) / CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.9 THEN 'FILE_NAME'
    WHEN CAST(SUM( CASE WHEN REGEXP_LIKE("{COL_NAME}"::VARCHAR, '^([0-9]{4}[- ]?){3}[0-9]{4}$')
                        THEN 1 END) AS FLOAT) / CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.8 THEN 'CREDIT_CARD'
    WHEN CAST(SUM( CASE WHEN REGEXP_LIKE("{COL_NAME}"::VARCHAR, '^([^,|\t]{1,20}[,|\t]){2,}[^,|\t]{0,20}([,|\t]{0,1}[^,|\t]{0,20})*$')
                     AND NOT REGEXP_LIKE("{COL_NAME}"::VARCHAR, '.*\\s(and|but|or|yet)\\s.*')
                    THEN 1 END) AS FLOAT) / CAST(COUNT("{COL_NAME}") AS FLOAT) > 0.8 THEN 'DELIMITED_DATA'
    WHEN SUM ( CASE WHEN REGEXP_LIKE("{COL_NAME}"::VARCHAR, '^[0-8][0-9]{2}-[0-9]{2}-[0-9]{4}$')
                     AND LEFT("{COL_NAME}", 3) NOT BETWEEN '734' AND '749'
                     AND LEFT("{COL_NAME}", 3) <> '666' THEN 1 END)::FLOAT/COUNT("{COL_NAME}")::FLOAT > 0.9 THEN 'SSN'
  END as std_pattern_match,
strTemplate05_else: NULL as distinct_std_value_ct,
  NULL as zero_length_ct,
  NULL as lead_space_ct,
  NULL as quoted_value_ct,
  NULL as includes_digit_ct,
  NULL as filled_value_ct,
  NULL as min_text,
  NULL as max_text,
  NULL as numeric_ct,
  NULL as date_ct,
  NULL as std_pattern_match,
strTemplate06_A_patterns: ( SELECT LEFT(LISTAGG(pattern, ' | ') WITHIN GROUP (ORDER BY ct DESC), 1000) AS concat_pats
      FROM (
            SELECT TOP 5 CAST(COUNT(*) AS VARCHAR(10)) || ' | ' || pattern AS pattern,
                   COUNT(*) AS ct
              FROM (  SELECT REGEXP_REPLACE(REGEXP_REPLACE( REGEXP_REPLACE(
                        "{COL_NAME}"::VARCHAR, '[a-z]', 'a'),
                                    '[A-Z]', 'A'),
                                    '[0-9]', 'N') AS pattern
                       FROM {DATA_SCHEMA}.{DATA_TABLE}
                      WHERE "{COL_NAME}" > ' ' AND (SELECT MAX(LEN("{COL_NAME}"))
                                                      FROM {DATA_SCHEMA}.{DATA_TABLE}) BETWEEN 3 and {PARM_MAX_PATTERN_LENGTH}) p
            GROUP BY pattern
            HAVING pattern > ' '
            ORDER BY COUNT(*) DESC) as ps) AS top_patterns,
strTemplate06_else: NULL as top_patterns,
strTemplate07_A_freq:  (  SELECT LEFT(LISTAGG(val, ' | ') WITHIN GROUP (ORDER BY ct DESC), 1000) as concat_vals
  FROM (
          SELECT TOP 10 CAST(COUNT(*) as VARCHAR(10)) || ' | ' || "{COL_NAME}" as val,
          COUNT(*) as ct
          FROM {DATA_SCHEMA}.{DATA_TABLE}
          WHERE "{COL_NAME}" > ' '
          GROUP BY "{COL_NAME}"
          HAVING "{COL_NAME}" > ' '
          ORDER BY COUNT(*), "{COL_NAME}" DESC
        ) ps
  )  AS top_freq_values,
strTemplate07_else: NULL as top_freq_values,
strTemplate08_N: MIN("{COL_NAME}")  AS min_value,
  MIN(CASE WHEN "{COL_NAME}" > 0 THEN "{COL_NAME}" ELSE NULL END)  AS min_value_over_0,
  MAX("{COL_NAME}")  AS max_value,
  AVG(CAST("{COL_NAME}" AS FLOAT))  AS avg_value,
  STDDEV(CAST("{COL_NAME}" AS FLOAT))  AS stdev_value,
  MIN(pct_25) as percentile_25,
  MIN(pct_50) as percentile_50,
  MIN(pct_75) as percentile_75,
strTemplate08_else: NULL as min_value,
  NULL as min_value_over_0,
  NULL as max_value,
  NULL as avg_value,
  NULL as stdev_value,
  NULL as percentile_25,
  NULL as percentile_50,
  NULL as percentile_75,
strTemplate10_N_dec: SUM(ROUND(MOD("{COL_NAME}", 1), 5)) as fractional_sum,

strTemplate10_else: NULL as fractional_sum,

strTemplate11_D:  GREATEST(MIN("{COL_NAME}"), '0001-01-01') as min_date,
  MAX("{COL_NAME}") as max_date,
  SUM(CASE
        WHEN DATEDIFF('MON', "{COL_NAME}", '{RUN_DATE}') > 12 THEN 1
                                                            ELSE 0
      END) AS before_1yr_date_ct,
  SUM(CASE
        WHEN DATEDIFF('MON', "{COL_NAME}", '{RUN_DATE}') > 60 THEN 1
                                                            ELSE 0
      END) AS before_5yr_date_ct,
  SUM(CASE
        WHEN DATEDIFF('MON', "{COL_NAME}", '{RUN_DATE}') > 240 THEN 1
                                                              ELSE 0
      END) AS before_20yr_date_ct,
  SUM(CASE
        WHEN DATEDIFF('DAY', "{COL_NAME}", '{RUN_DATE}') BETWEEN 0 AND 365 THEN 1
                                                                         ELSE 0
      END) AS within_1yr_date_ct,
  SUM(CASE
        WHEN DATEDIFF('DAY', "{COL_NAME}", '{RUN_DATE}') BETWEEN 0 AND 30 THEN 1
                                                                        ELSE 0
      END) AS within_1mo_date_ct,
  SUM(CASE
        WHEN "{COL_NAME}" > '{RUN_DATE}' THEN 1 ELSE 0
      END) AS future_date_ct,
  COUNT(DISTINCT DATEDIFF(day, "{COL_NAME}", '{RUN_DATE}' ) ) as date_days_present,
  COUNT(DISTINCT DATEDIFF(week, "{COL_NAME}", '{RUN_DATE}' ) ) as date_weeks_present,
  COUNT(DISTINCT DATEDIFF(month, "{COL_NAME}", '{RUN_DATE}' ) ) as date_months_present,

strTemplate11_else:  NULL as min_date,
  NULL as max_date,
  NULL as before_1yr_date_ct,
  NULL as before_5yr_date_ct,
  NULL as before_20yr_date_ct,
  NULL as within_1yr_date_ct,
  NULL as within_1mo_date_ct,
  NULL as future_date_ct,
  NULL as date_days_present,
  NULL as date_weeks_present,
  NULL as date_months_present,

strTemplate12_B: SUM(CAST("{COL_NAME}" AS INTEGER)) AS boolean_true_ct,

strTemplate12_else: NULL as boolean_true_ct,

strTemplate13_ALL: NULL AS datatype_suggestion,
strTemplate14_A_do_patterns:  ( SELECT COUNT(DISTINCT REGEXP_REPLACE( REGEXP_REPLACE( REGEXP_REPLACE(
                          "{COL_NAME}"::VARCHAR, '[a-z]', 'a'),
                                      '[A-Z]', 'A'),
                                      '[0-9]', 'N')
                ) AS pattern_ct
     FROM {DATA_SCHEMA}.{DATA_TABLE}
    WHERE "{COL_NAME}" > ' ' )  AS distinct_pattern_ct,
  SUM(SIGN(REGEXP_COUNT(TRIM("{COL_NAME}"::VARCHAR), ' '))::BIGINT) AS embedded_space_ct,
  AVG(REGEXP_COUNT(TRIM("{COL_NAME}"::VARCHAR), ' ')::FLOAT)  AS avg_embedded_spaces,

strTemplate14_A_no_patterns:  NULL as distinct_pattern_ct,
  SUM(SIGN(REGEXP_COUNT(TRIM("{COL_NAME}"::VARCHAR), ' '))::BIGINT) AS embedded_space_ct,
  AVG(REGEXP_COUNT(TRIM("{COL_NAME}"::VARCHAR), ' ')::FLOAT)  AS avg_embedded_spaces,

strTemplate14_else:  NULL as distinct_pattern_ct,
  NULL as embedded_space_ct,
  NULL as avg_embedded_spaces,

strTemplate15_ALL:  NULL as functional_data_type,
  NULL as functional_table_type,

strTemplate16_ALL:  " '{PROFILE_RUN_ID}' as profile_run_id "

strTemplate98_sampling: ' FROM {DATA_SCHEMA}.{DATA_TABLE} SAMPLE ({SAMPLE_SIZE} rows)'

strTemplate98_else: ' FROM {DATA_SCHEMA}.{DATA_TABLE}'

strTemplate99_N: |
      ,
      (SELECT
             PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY "{COL_NAME}") OVER () AS pct_25,
             PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY "{COL_NAME}") OVER () AS pct_50,
             PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY "{COL_NAME}") OVER () AS pct_75
        FROM {DATA_SCHEMA}.{DATA_TABLE} LIMIT 1) pctile
strTemplate99_else: ;

strTemplate100_sampling: ' '
